Делегаты (delegates)
----------------------
Из С++:
Указатель на функцию - переменная, содержащая адрес функции (точки входа)
Особенность - указатель содержит данные о типах параметров

Функтор - объект (иногда класс), который можно вызвать - применить оператор вызова "()"

Лямбда - функциональное выражение, запись, имеющая результатом функцию или функтор

?зачем? 
 - ссылаться на внешний модуль (DLL)
 - сохранять состояние функций (аналогично объектам), инкапсулировать данные (помнить предыдущий(е) вызов, изменяя поля своего объекта-функтора)
 - использовать функции как переменные: 
	менять их во время выполнения (переключаться)
	создавать из них массивы
	передавать как аргументы других функций/функторов
---------

Делегаты - элементы С#, играющие роль указателей на методы

Описание делегата
delegate int Oper(int x);
int - тип возврата
Oper - имя делегата (как тип данных, класса)
(int x) - тип(ы) параметров
Создание объекта-делегата:
 Oper oper = Abs;	// Oper oper = new Oper(Abs);
! при объявлении требуется инициализация, нельзя разделить
	Oper oper;
	oper = Abs;

Изменение значения: 
oper = Sqr;

! Добавление метода:
 oper += Sqr;	- будет выполняться несколько методов синхронно, последовательно, в порядке добавления
					один и тот же метод
! При выполнении нескольких методов возврат делегата = возврат последнего вызова

?зачем?
- функции обратного вызова (callback) - те, которые выполняются после работы другой функции
	func1(x, y, fun_callback) { do_smth(x,y); fun_callback(); }
- реализация событийной модели:
	источник события --- подписчики (делегаты - указатели на их методы)
		наступление  -----> уведомление всех подписчиков (вызов их методов)