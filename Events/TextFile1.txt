События (Events)
Идея событий возникает в связи с увеличением масштаба проектов, приложений. Появляется необходимость обеспечить обмен сообщениями(данными) 
с большим кол-вом "подписчиков" - различных модулей программы. Чем больше этих модулей, тем более разнообразным и сложным 
становится взаимодействие, требуя новых подходов к реализации.

Идея заключается в том, что одни модули являются источниками событий (Subject), другие - подписчиками/слушателями (Subscribers/Listeners)
Модуль-подписчик подписывается - передаёт свой метод для запуска источника события
Модуль-источник собирает всех подписчиков и при возникновении события запускает все подписанные методы

ТЗ:
модель редактора текста:
	текст вводится с клавиатуры
	при нажатии S он сохраняется
	- модуль наличия изменений отображается * если есть несохраненные элементы. После "сохранения" * убирается
	- модуль размера выводит информацию о количестве набранных символов
	-------------------------------------------------------------------
Для согласования сигнатуры у методов у источника и подписчика задаются делегаты 
public event EventListener(string str);

Поскольку запускаться эти методы будут из источника, а выполняться в подписчике:
возврат обработчику не нужен, но нужны параметры, передающие подписчику данные из источника

В подписчиках реализуются методы, согласно этому делегату:
public void OnNewChar(string str)

или

public EventListener OnNewChar = str => {...}

В источнике об
является поле типа "событие" с этим делегатом
public event EventListener NewChar;

